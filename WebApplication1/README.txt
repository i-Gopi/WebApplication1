Gopikrishnan Athimanna Thottathil
0850562

2024/01.11 
1230
Part 1
Step 1: Download and Install Visual Studio Enterprise Edition
Made sure Visual Studio Enterprise Edition installed. 

Step 2: Followed the Tutorial
Refered to the official ASP.NET Core MVC tutorial provided by Microsoft to get started: Start with MVC.

Ensure that you mark the prerequisites needed for ASP.NET Core MVC during the installation process.

Step 3: Created a New Project
Created a new project named "WebApplication1" using .NET 8.0 (Long Term Support). Verified that the instructions provided in the tutorial.

Step 4: Handle SSL Warning
While running the app, a warning popup  appeared. Made sure to select "Yes" for the SSL warning and CA warning. If you forget to mark the "Don't ask me again" box, no worries, you can always handle it manually.

Step 5: Start Debugging
Selected the "Start Debugging" option. If you encounter issues with Microsoft Edge displaying unauthorized certificate warnings, consider changing the browser to Firefox or another preferred browser.

Step 6: Browser Selection
Explored the dropdown bar near the debug option to choose your preferred web browser for debugging. This allows you to seamlessly switch between browsers.

 2024/1/16
 1630

 Part 2 
 * Added controller
 
  Step 1: Create HelloWorldController
In Solution Explorer, right-click Controllers > Add > Controller.
In the Add New Scaffolded Item dialog box, selected MVC Controller - Empty > Add.
Entered HelloWorldController.cs in the Add New Item - MvcMovie dialog and selected Add.
Step 2: Modify HelloWorldController
Replaced the contents of Controllers/HelloWorldController.cs 

Step 3: Test the Controller
Access https://localhost:7299/HelloWorld in  browser to see the default message.
Tried https://localhost:7299/HelloWorld/Welcome?name=Rick&numtimes=4 to test the personalized greeting.



2024/1/17 
2130

Part 3

Modifying the HelloWorldController class to use Razor(syntax) view files. 
This cleanly encapsulates the process of generating HTML responses to a client.

* Current index method  returns a string with a message in the controller class.
* Replaced the Index method in HelloWorldController.cs with

* calls the controller's View method.
* return an IActionResult or a class derived from ActionResult
Completed part 3

Part 4
2024/1/23 1300

Used the scafolding package to create edit,update and delete.
In Model folder added class and named file as movie.cs
Then under Controllers folder Added New Scaffolded Item and selcted movie option under the model class
To get Migration folder, selected NuGet Package Manager From the Tools menu and gave required command under Package Manager Console 
Then Run the app and selected the Movie App and modified the data
Models represent the data and business logic of an application.

Completed part 4

Part 5
2024/1/24 1900





Part 6
2024/1/24    2000

Controller Methods and Views
    Opened the Models/Movie.cs file and updated it
    Edit, Details, and Delete links are generated by the Core MVC Anchor Tag Helper in the Views/Movies/Index.cshtml file




part 7
2024/1/26  1800

To add the search bar
    updated the index method found inside the  Controllers/MoviesController.cs
    Changed the parameter to id and all occurrences of searchString to id.
    changed the index method back so that the it takes a parameter named searchstring
    Opened the Views/Movies/Index.cshtml file, and added the <form> markup to use the form tag helper.so when we submit the  form, the filter string is posted to the Index action of the movies controller.

To add the search by genre.
    Created a new class in the models folder called MovieGenreViewModel.
    Replaced the Index method in MoviesController.cs

To add search by genre to the Index view.
     Updated the  Index.cshtml found in Views/Movies.



Part 8
2024/1/28   1745

To add a Rating Property to the Movie Model.
    Added rating property into Models/Movie.cs
    In MoviesController.cs updated the [Bind] attribute for both the Create and Edit action methods to include the Rating property.
    Edited the /Views/Movies/Index.cshtml file and added a Rating field
    Updated the /Views/Movies/Create.cshtml with a Rating field
    Updated the SeedData by adding the rating division. so that it provides a value for the new column.
    The app was not working until the the data base was updated.so updated the database by entering ADD MIGRATION command in PMC.


Part 9
2024/1/29  1830

To Add validation.
    updated the Movie class to take advantage of the built-in validation attributes Required, StringLength, RegularExpression, Range and the DataType formatting attribute.
    Minimum lenght and regular expression attributes are added to limit charecter input
    An error has been occured after this and the problem is solved by adding rating to the movies that are already present in data base
    Data base was opened by navigating through view>SQL server object Explorer>sql server>Data bases>MvcMovie context>dbo.movie


Part 10
2024/1/30 1115

Examine the Details and Delete methods 
    Opened the movie controller class to examine the details method.
    Recalled the seqments that are defined in program.cs
    Examined the delete and deleteconfirmed methods.
    The [HttpPost] method that deletes the data is named DeleteConfirmed to give the HTTP POST method a unique signature or name. 


